"""create one to many and many to many relationships between users and purchases

Revision ID: 81261b2b3706
Revises: 8a3e76d43f0e
Create Date: 2019-12-16 17:15:48.924003

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import table, column
from legarda.api.models import User


# revision identifiers, used by Alembic.
revision = '81261b2b3706'
down_revision = '8a3e76d43f0e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users_purchases',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('purchase_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['purchase_id'], ['purchases.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'purchase_id')
    )

    conn = op.get_bind()
    res = conn.execute("SELECT users.id AS users_id FROM users WHERE users.admin = true LIMIT 1")
    print('\n\n\nfrom migration result proxy is')
    print(res)
    row = res.fetchone()
    print('\n\n\nthe admin row is')
    print(row)
    admin_id = row[0]

    op.add_column('purchases', sa.Column('owner_id', sa.Integer(), nullable=True))
    purchases_owner_id = table('purchases', column('owner_id'))
    op.execute(purchases_owner_id.update().values(owner_id=admin_id))
    op.alter_column('purchases', 'owner_id', nullable=False)
    op.create_foreign_key(None, 'purchases', 'users', ['owner_id'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'purchases', type_='foreignkey')
    op.drop_column('purchases', 'owner_id')
    op.drop_table('users_purchases')
    # ### end Alembic commands ###
